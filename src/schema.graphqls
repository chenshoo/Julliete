type User{
    id: String
    email: String
    password: String
    userInfo: UserInformation
}

type UserInformation{
    privateName: String
    lastName: String
    gender: Gender
    dateOfBirth: CustomDate
    phoneNumber: String
    initialPanicAttackDate: CustomDate
    sleep: SleepingHours
    emergencyContacts: [Contact]
    isShabbatKeeper: Boolean
    isSmoking: Boolean
    familyStatus: FamilyStatus
    traumaType: TraumaType
    medicalInformation: MedicalInformation
    address: Address
    stressHours: [Int]
    stressfullPlaces: [String]
}

type Address{
    state: String
    city: String
    street: String
    apartment: String
}

type MedicalInformation{
    isTaking: Boolean
    drugs: [String]
}

enum Gender{
    MALE,
    FEMALE
}

enum TraumaType{
    SEX_ASSAULT
    ARMY
}

type FamilyStatus{
    isMarried: Boolean
    numberOfChildren: Int
}

type Contact{
    phoneNumber: String
    name: String
}

type CustomDate{
    day: String
    month: String
    year: String
}

type SleepingHours{
    bedHour: Int
    wakingHour: Int
}

type Query {
    user: User

}

input LocationInput{
    long: Float
    lat: Float
}

type Mutation{
    sendUserLocation(userId: String, location: LocationInput): Boolean
}
